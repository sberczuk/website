%!PS-Adobe-3.0
%%Title: (Untitled1)
%%Creator: (Microsoft Word: LaserWriter 8 8.2)
%%CreationDate: (3:19 PM Tuesday, October 17, 1995)
%%For: (Ed Morgan)
%%Pages: 16
%%DocumentFonts: Times-Roman Times-Italic Helvetica-Bold Helvetica Helvetica-BoldOblique Courier Palatino-Roman
%%DocumentNeededFonts: Times-Roman Times-Italic Helvetica-Bold Helvetica Helvetica-BoldOblique Courier Palatino-Roman
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%ADO_ImageableArea: 31 31 583 761
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(Untitled1)def
/Creator(Microsoft Word: LaserWriter 8 8.2)def
/CreationDate(3:19 PM Tuesday, October 17, 1995)def
/For(Ed Morgan)def
/Pages 1 def
end def end
/md 202 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *PageSize LetterSmall

    2 dict dup /PageSize [612 792] put dup /ImagingBBox [25 25 587 767] put setpagedevice
%%EndFeature
}featurecleanup
(Ed Morgan)setjob
/mT[1 0 0 -1 31 761]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Italic
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-BoldOblique
%%IncludeFont: Courier
%%IncludeFont: Palatino-Roman
/f0_1/Times-Roman
:mre
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f1_1/Times-Italic
:mre
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f2_1 f0_1
:v def
/f3_1/Helvetica-Bold
:mre
/f3_20 f3_1 20 scf
/f3_14 f3_1 14 scf
/f3_12 f3_1 12 scf
/f3_10 f3_1 10 scf
/f3_9 f3_1 9 scf
/f4_1/Helvetica
:mre
/f4_12 f4_1 12 scf
/f4_10 f4_1 10 scf
/f4_9 f4_1 9 scf
/f7_1/Helvetica-BoldOblique
:mre
/f7_9 f7_1 9 scf
/f8_1/Courier
:mre
/f8_10 f8_1 10 scf
/f9_1/Palatino-Roman
:mre
/f9_9 f9_1 9 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Ed Morgan; page: 1 of 16)setjob
%%EndPageSetup
gS 0 0 552 730 rC
41 717 :M
f0_10 sf
.867 .087(PLoP '95)J
254 717 :M
(1)S
417 717 :M
-.169(Steve Berczuk)A
41 132 :M
f3_20 sf
.356 .036( Organizational Multiplexing:)J
41 156 :M
1.969 .197(Patterns for Processing Satellite)J
41 180 :M
1.537 .154(Telemetry with Distributed)J
41 204 :M
.163(Teams)A
41 243 :M
f3_14 sf
2.52 .252(Stephen P. Berczuk)J
41 260 :M
2.956 .296(MIT Center for Space Research)J
95 298 :M
f4_10 sf
.371 .037(Organizational issues play a significant role in many)J
77 309 :M
2.061 .206(software architectures, though often more as a side)J
77 320 :M
1.801 .18(effect than by design. This paper presents a pattern)J
77 331 :M
1.761 .176(language for developing ground software for satellite)J
77 342 :M
5.056 .506(telemetry systems that illustrates how to take)J
77 353 :M
-.032(organization into account in the architecture. In particular,)A
77 364 :M
.105 .011(this paper addresses:)J
113 381 :M
<A5>S
131 381 :M
2.136 .214(extending a pattern from the 1995 PLoP)J
131 392 :M
4.189 .419(conference [Berczuk95] into a pattern)J
131 403 :M
.136(language.)A
113 414 :M
<A5>S
131 414 :M
3.417 .342(assembling patterns from other pattern)J
131 425 :M
2.142 .214(languages into a domain specific pattern)J
131 436 :M
-.011(language,  and)A
113 447 :M
<A5>S
131 447 :M
2.83 .283(including social context as a motivating)J
131 458 :M
.06 .006(context for a pattern.)J
95 481 :M
.702 .07(Since scientific research satellite systems are often)J
77 492 :M
1.648 .165(developed at academic institutions, where similarities)J
77 503 :M
.689 .069(between ongoing projects exist only at the architectural)J
77 514 :M
1.727 .173(level \(code typically cannot be reused\), documenting)J
77 525 :M
.927 .093(architectural insights such as these in the pattern form)J
77 536 :M
1.766 .177(can be a very practical way to achieve reuse. Since)J
77 547 :M
1.454 .145(assembly of telemetry involves \(re\)creation of objects)J
77 558 :M
2.144 .214(from a serial stream, these patterns are relevant to)J
77 569 :M
.738 .074(designers of any systems which creates objects from a)J
77 580 :M
-.184(serial stream)A
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Ed Morgan; page: 2 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
216 748 :M
f0_10 sf
.867 .087(PLoP '95)J
429 748 :M
(2)S
592 748 :M
-.169(Steve Berczuk)A
1 G
0 0 1 1 rF
648 748 :M
psb
/wp$gray 0.8000 def

/wp$top 144 def

/wp$left 52 def

/wp$right 200 def

/wp$bottom 158 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
54 156 :M
0 G
f3_10 sf
.699(Introduction)A
216 153 :M
f0_10 sf
.042 .004(Organizational issues have an impact on the development of software systems. It)J
216 167 :M
.285 .029(is important to design an architecture in a way that fits well with existing social)J
216 181 :M
-.048(and organizational constraints.)A
216 201 :M
-.028(As an example of how these issues can be addressed, this paper presents a pattern)A
216 215 :M
.598 .06(language to guide the development of a ground based system that will)J
f1_10 sf
.086 .009( )J
f0_10 sf
.19(process)A
216 229 :M
.345 .034(telemetry data from an earth-orbiting astronomical observatory. Systems of this)J
216 243 :M
1.727 .173(type involve many diverse, and often geographically distributed groups of)J
216 257 :M
1.517 .152(people;  such a system is challenging to design from a social as well as a)J
216 271 :M
.728 .073(technical point of view.)J
f0_9 sf
0 -3 rm
.187(1)A
0 3 rm
f0_10 sf
.574 .057(  The patterns present in this system are applicable to)J
216 285 :M
.642 .064(other systems that have similar organizational constraints. Since telemetry can)J
216 299 :M
-.057(be considered a form of persistence, where objects are serialized into a stream and)A
216 313 :M
.167 .017(transmitted, some of these patterns will also be of interest to builders of systems)J
216 327 :M
-.026(that use parsing and reconstruction of objects from a serial data stream.)A
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
216 522.24 -.24 .24 359.24 522 .24 216 522 @a
216 541 :M
f0_9 sf
.146(1)A
f0_10 sf
0 3 rm
.457 .046(The patterns in this paper might also be of use to designers in other situations)J
0 -3 rm
216 558 :M
-.099(where development teams are distributed.)A
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Ed Morgan; page: 3 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 748 :M
f0_10 sf
.867 .087(PLoP '95)J
285 748 :M
(3)S
448 748 :M
-.169(Steve Berczuk)A
72 153 :M
2.871 .287(This pattern language makes use of Coplien's patterns of organization)J
72 167 :M
.313([Coplien95])A
f0_9 sf
0 -3 rm
.321(2)A
0 3 rm
f0_10 sf
.973 .097( as context for the other patterns, and also shows how to effect)J
72 181 :M
1.266 .127(some of these patterns in the context of a ground based scientific telemetry)J
72 195 :M
.172 .017(processing system.)J
72 215 :M
.656 .066(After a description of the relevant elements of the organizatonal structure of a)J
72 229 :M
.081 .008(typical project, patterns which address some of the issues raised by this structure)J
72 243 :M
-.106(will be described.)A
72 263 :M
.928 .093(Most of the projects being pursued at the Center For Space Research at MIT)J
72 277 :M
.143 .014(share an organization similar to the following:)J
f0_9 sf
0 -3 rm
(3)S
0 3 rm
1 G
0 0 1 1 rF
263 274 :M
psb
/wp$gray 0.8000 def

/wp$top 251 def

/wp$left 412 def

/wp$right 560 def

/wp$bottom 265 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
414 263 :M
0 G
f3_10 sf
4.561 .456(Project Organization)J
414 294 :M
f1_9 sf
.855 .085(Typical Project Organization)J
72 285 216 162 rC
75.5 306.5 88 51 rS
93 322 :M
f4_10 sf
(Instrument )S
100 333 :M
-.278(Team 1 )A
105 344 :M
-.454(@MIT)A
189.5 304.5 97 53 rS
204 318 :M
(Instrument )S
204 329 :M
-.325(Team 2 @ )A
211 340 :M
.16 0 rm
(another )S
207 351 :M
-.066(University )A
101.5 398.5 154 47 rS
130 417 :M
.489 0 rm
(Science Operations )S
161 428 :M
.499 0 rm
(Center)S
154 439 :M
-.238( at NASA )A
13 66 114 127 359 @k
13 -114 -66 127 398 @k
-1 -1 128 393 1 1 127 365 @b
13 66 114 232 359 @k
13 -114 -66 232 398 @k
-1 -1 233 393 1 1 232 365 @b
gR
gS 31 31 552 730 rC
90 462 :M
f0_10 sf
<A5>S
108 462 :M
.926 .093(A number of )J
f1_10 sf
1.914 .191(instrument teams)J
f0_10 sf
1.234 .123( each with primary responsibility for)J
108 473 :M
.28 .028(deployment and analysis of the data from a single scientific instrument)J
108 484 :M
.204 .02(that will be on the satellite. Often these teams will be at geographically)J
108 495 :M
-.047(separate locations.)A
90 506 :M
<A5>S
108 506 :M
2.022 .202(A central organization \(the )J
f1_10 sf
3.254 .325(operations center)J
f0_10 sf
2.016 .202(\) which performs a)J
108 517 :M
.021 .002(coordination function. The operations center may not have the expertise)J
108 528 :M
.361 .036(to understand the scientific objectives of each of the instrument teams,)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
72 556.24 -.24 .24 215.24 556 .24 72 556 @a
72 575 :M
f0_9 sf
.33(2)A
f0_10 sf
0 3 rm
1.259 .126(To facilitate understanding of paper copies of this document, the appendix)J
0 -3 rm
72 592 :M
.576 .058(describes summarizes  the patterns from [Coplien95] [Gamma+94] and [Beck])J
72 606 :M
-.109(referenced in this paper.)A
72 623 :M
f0_9 sf
.114(3)A
f0_10 sf
0 3 rm
.397 .04(This particular structure is based on that of the X-ray Timing Explorer project)J
0 -3 rm
72 640 :M
-.022(\(XTE\), currently in progress at the MIT Center for Space Research.)A
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Ed Morgan; page: 4 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
216 748 :M
f0_10 sf
.867 .087(PLoP '95)J
429 748 :M
(4)S
592 748 :M
-.169(Steve Berczuk)A
252 153 :M
.499 .05(and is focused on the operational aspects of the system \(processing so)J
252 164 :M
-.046(many bytes of telemetry per second, and archiving data, for example\).)A
234 175 :M
<A5>S
252 175 :M
1.781 .178(A small base of shared knowledge between instrument teams and)J
252 186 :M
-.063(operations center.)A
234 197 :M
<A5>S
252 197 :M
.992 .099(Small work groups, particularly at the instrument team locations. At)J
252 208 :M
1.491 .149(each team site, many of the subsystems fulfill the context of )J
f1_10 sf
.626(Solo)A
252 219 :M
.274 .027(Virtuoso )J
f0_10 sf
.065([Coplien95].)A
216 233 :M
-.022(The architecture of the data analysis system takes the following general form:)A
54 250 :M
f1_9 sf
.958 .096(Typical Architecture)J
216 241 315 214 rC
292.5 283.5 135 62 rS
309 301 :M
.489 0 rm
f4_10 sf
(Science Operations )S
320 312 :M
.046 0 rm
(Processes and )S
305 323 :M
-.217(archives data from all )A
329 334 :M
.666 0 rm
(instruments)S
258.5 409.5 87 44 rS
365.5 409.5 87 44 rS
276 423 :M
(Instrument )S
286 434 :M
-.028(Team1)A
289 445 :M
.223 0 rm
(Client)S
379 422 :M
(Instrument )S
389 433 :M
-.028(Team2)A
392 444 :M
.223 0 rm
(Client)S
13 -114 -66 345 280 @k
-1 -1 346 275 1 1 345 256 @b
358 262 :M
(Telemetry)S
13 -114 -66 352 375 @k
-1 -1 353 370 1 1 352 346 @b
13 -68 -20 318 406 @k
-1 -1 323 403 1 1 350 375 @b
13 195 243 385 404 @k
351 377 -1 1 381 400 1 351 376 @a
375 368 :M
-.033(Sends data to appropriate )A
375 379 :M
-.079(team's client )A
375 390 :M
(for processing)S
gR
gS 31 31 552 730 rC
216 473 :M
f0_10 sf
1.13 .113(The operations center depends on the instrument teams for providing details)J
216 487 :M
.008 .001(about telemetry specific to each instrument.)J
216 507 :M
1.455 .145(Each of the teams has very different motivations; the instrument teams are)J
216 521 :M
.344 .034(focused on getting the best science from "their" instruments, and the operations)J
216 535 :M
.068 .007(team is focused on getting the system assembled \(with science often a secondary)J
216 549 :M
.182 .018(consideration\). The teams have a large degree of autonomy, but they must agree)J
216 563 :M
1.21 .121(on certain interfaces. As a result, a minimal amount of coupling is best)J
f0_9 sf
0 -3 rm
.37(4)A
0 3 rm
f0_10 sf
.837 .084(. A)J
216 577 :M
.695 .07(major challenge in designing an architecture of such a system is to handle the)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
216 590.24 -.24 .24 359.24 590 .24 216 590 @a
216 609 :M
f0_9 sf
.338(4)A
f0_10 sf
0 3 rm
1.219 .122(It can be argued that minimizing coupling is an important consideration in)J
0 -3 rm
216 626 :M
1.378 .138(building any system, but because of the degree of decentralization and non)J
216 640 :M
.089 .009(locality in the projects being discussed here, it is especially important.)J
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Ed Morgan; page: 5 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 748 :M
f0_10 sf
.867 .087(PLoP '95)J
285 748 :M
(5)S
448 748 :M
-.169(Steve Berczuk)A
72 153 :M
1.564 .156(organizational and political issues that arise, in such a way that individual)J
72 167 :M
-.075(organizations are not overly affected by external forces.)A
72 187 :M
1.88 .188(The general organizational forces involved in scientific satellite telemetry)J
72 201 :M
-.015(processing systems can be summarized as follows:)A
90 218 :M
<A5>S
108 218 :M
-.133(Distributed experience)A
90 229 :M
<A5>S
108 229 :M
-.009(Small teams, distributed geographically.)A
90 240 :M
<A5>S
108 240 :M
(Little carryover of personnel from one project to the next.)S
72 254 :M
1.312 .131(This paper focuses on the process of classification and interpretation of the)J
72 268 :M
.517 .052(telemetry packets as they are received from the spacecraft, and dispatching the)J
72 282 :M
.989 .099(resulting data objects for further processing. Other patterns can be written to)J
72 296 :M
.441 .044(guide the development of other aspects of the system such as commanding and)J
72 310 :M
-.067(data analysis.)A
72 330 :M
.214 .021(While this paper discusses patterns found in a scientific satellite application, the)J
72 344 :M
.034 .003(patterns have applications to other domains as well.)J
72 364 :M
-.018(The architectural goals and the patterns that complete them are as follows:)A
108 384 :M
<A5>S
126 384 :M
-.047(Facilitate autonomous development: )A
f1_10 sf
-.049(Loose Interfaces)A
108 404 :M
f0_10 sf
<A5>S
126 404 :M
-.145(Interpret a Data Stream: )A
f1_10 sf
-.169(Parser/Builder)A
108 424 :M
f0_10 sf
<A5>S
126 424 :M
-.062(Divide responsibilities for interpretation: )A
f1_10 sf
-.072(Hierarchy of Factories)A
108 444 :M
f0_10 sf
<A5>S
126 444 :M
-.065(Connect Systems: )A
f1_10 sf
-.079(Handlers)A
72 464 :M
.296(Context)A
f0_10 sf
.185(:)A
f1_10 sf
.151 .015( )J
f0_10 sf
1.034 .103(To help development of a system with many teams proceeding at a)J
72 478 :M
.503 .05(reasonable pace it is important  to keep interfaces between systems loose. This)J
72 492 :M
.457 .046(is particularly important in a situation where there are teams of developers that)J
72 506 :M
.736 .074(are geographically distributed and a situation where rapid turnaround time for)J
72 520 :M
-.035(design and development is important.)A
72 540 :M
f1_10 sf
-.026(Problem)A
f0_10 sf
-.022(: Communication is difficult. If requirements are changing and the teams)A
72 554 :M
-.007(are located in a variety of places then the poor communication can stall a project.)A
72 568 :M
1.151 .115(This can be particularly problematic when an organization does not have an)J
72 582 :M
-.045(architectural center, such as specified by )A
f1_10 sf
-.048(Architect Controls Product )A
f0_10 sf
-.054([Coplien95].)A
72 602 :M
.203 .02(This is particularly applicable in a research satellite application where teams are)J
72 616 :M
1.589 .159(small, requirements are changing, and the potential for gridlock is great if)J
72 630 :M
.367 .037(dependencies are too high. The operations center is the organizational center of)J
72 644 :M
.759 .076(the architecture, but does not always have the capability to design a complete)J
1 G
0 0 1 1 rF
396 644 :M
psb
/wp$gray 0.8000 def

/wp$top 352 def

/wp$left 412 def

/wp$right 560 def

/wp$bottom 366 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
414 364 :M
0 G
f3_10 sf
4.498 .45(The Patterns)J
1 G
0 0 1 1 rF
484 364 :M
psb
/wp$gray 0.8000 def

/wp$top 452 def

/wp$left 412 def

/wp$right 560 def

/wp$bottom 466 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
414 464 :M
0 G
2.991 .299(1.  Loose Interfaces)J
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(Ed Morgan; page: 6 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
216 748 :M
f0_10 sf
.867 .087(PLoP '95)J
429 748 :M
(6)S
592 748 :M
-.169(Steve Berczuk)A
216 153 :M
.104 .01(system. To avoid development bottlenecks, we need to be able to limit the effect)J
216 167 :M
.102 .01(one team's work will have on another.)J
216 187 :M
f1_10 sf
.147(Therefore)A
f0_10 sf
.538 .054(: Limit the number of explicit, static, interfaces. Use loose interfaces)J
216 201 :M
-.107(like )A
f1_10 sf
-.138(Callback)A
f0_10 sf
-.119( and )A
f1_10 sf
-.131(Parser/Builder)A
f0_10 sf
-.119( and )A
f1_10 sf
-.128(Hierarchy of Factories)A
f0_10 sf
-.12( to achieve this.)A
216 221 :M
.648 .065(Decoupling interfaces in this way will also simplify the development of )J
f1_10 sf
.227(Early)A
216 235 :M
.585(Program)A
f0_10 sf
1.901 .19( [Beck], since it provides a mechanism for building incremental)J
216 249 :M
.888 .089(systems. It can also facilitate implementation of )J
f1_10 sf
1.384 .138(Developer Controls Process)J
216 263 :M
f0_10 sf
.955 .096([Coplien95], by making it easy to define features that can be controlled by a)J
216 277 :M
-.088(developer or group.)A
216 297 :M
f1_10 sf
.015(Context)A
f0_10 sf
.049 .005(: Many systems need to read data from a stream and classify elements on)J
216 311 :M
.1 .01(the steam as objects. A way is needed to create arbitrary objects based on tokens)J
216 325 :M
-.017(in the data stream.)A
216 345 :M
f1_10 sf
.12(Problem)A
f0_10 sf
.341 .034(:  Given a data stream, we want to interpret it, classifying the elements)J
216 359 :M
.813 .081(into the appropriate class of object. The data stream contains tags that can be)J
216 373 :M
-.014(used to identify the raw data, and we want to convert the stream into object form,)A
216 387 :M
-.049(so we can process the data.)A
216 407 :M
-.054(As a non-telemetry related example consider the problem of reading in raw UNIX)A
216 421 :M
.085 .009(files and classifying them into types of files based on their "magic number" \321as)J
216 435 :M
.729 .073(in the tags in the /etc/magic file. You could create the appropriate subclass of)J
216 449 :M
f1_10 sf
.376(File)A
f0_10 sf
1.372 .137( and then invoke its virtual edit\(\) method,  bringing up the appropriate)J
216 463 :M
-.137(editor.)A
216 483 :M
2.583 .258(In a telemetry processing system each telemetry packet has identifying)J
216 497 :M
.465 .047(information in its header. The telemetry processing system design requires that)J
216 511 :M
1.181 .118(an object, once created, knows how to process itself \(i.e., we will not use a)J
216 525 :M
.296 .03(dispatch table, or a switch on type\321 this is to satisfy the )J
f1_10 sf
.709 .071(Organization Follows)J
216 539 :M
.042(Location)A
f0_10 sf
.147 .015([Coplien95] pattern\). At the lowest level objects will be created using a)J
216 553 :M
f1_10 sf
3.874 .387(Factory Method)J
f0_10 sf
2.398 .24( [Gamma+94]. Each class of packets will be processed)J
216 567 :M
.87 .087(differently; some will assemble themselves into larger units, others will issue)J
216 581 :M
1.917 .192(messages.  Consider the following hierarchy, as shown in figure 1, for a)J
216 595 :M
-.059(spacecraft that there are two subclasses of )A
f1_10 sf
-.069(Packet)A
f0_10 sf
(:)S
f1_10 sf
-.07(APackets)A
f0_10 sf
-.059( and )A
f1_10 sf
-.07(BPackets)A
f0_10 sf
(.)S
1 G
0 0 1 1 rF
508 595 :M
psb
/wp$gray 0.8000 def

/wp$top 285 def

/wp$left 52 def

/wp$right 200 def

/wp$bottom 299 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
54 297 :M
0 G
f3_10 sf
4.823 .482(2. Parser/Builder)J
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(Ed Morgan; page: 7 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 748 :M
f0_10 sf
.867 .087(PLoP '95)J
285 748 :M
(7)S
448 748 :M
-.169(Steve Berczuk)A
414 153 :M
f1_9 sf
.367 .037(Sample Packet Hierarchy)J
72 144 255 155 rC
171.5 176.5 71 43 rS
254.5 251.5 71 43 rS
93.5 254.5 71 43 rS
186 201 :M
f4_12 sf
(Packet)S
102 275 :M
(APacket)S
264 272 :M
(BPacket)S
13 124 172 188 219 @k
-1 -1 134 255 1 1 183 222 @b
13 0 48 225 222 @k
230 225 -1 1 285 249 1 230 224 @a
gR
gS 31 31 552 730 rC
72 317 :M
f0_10 sf
.325 .033(We want each )J
f1_10 sf
.107(Packet)A
f0_10 sf
.342 .034(, once created, to process itself by using a virtual method,)J
72 331 :M
f1_10 sf
.128(process\(\))A
f0_10 sf
.34 .034(. If we pass  a data stream into a factory, we want  to return  a pointer)J
72 345 :M
(to a )S
f1_10 sf
(Packet)S
f0_10 sf
.022 .002( that has the appropriate type.  To summarize the forces:)J
90 362 :M
<A5>S
108 362 :M
-.058(There is a need to interpret a raw data stream.)A
90 373 :M
<A5>S
108 373 :M
.852 .085(There is a generic way to process the packets once they are returned)J
108 384 :M
-.029(from the factory.)A
90 395 :M
<A5>S
108 395 :M
-.044(The raw data contain tags which can be used for classification.)A
72 409 :M
f1_10 sf
-.09(Therefore: )A
f0_10 sf
-.083(to resolve these forces use a )A
f1_10 sf
-.094(Parser/Builder)A
f0_10 sf
-.091( which reads the identifying)A
72 423 :M
2.25 .225(information from the header of the packet, and creates an object of the)J
72 437 :M
.026 .003(appropriate type, removing only one object's worth of data from the stream.)J
72 457 :M
-.014(An example of a client interface is:)A
108 474 :M
f8_10 sf
(while \(!dataStream.empty\(\)\) {)S
144 485 :M
(PacketFactory f;)S
144 496 :M
(Packet* p = f.make\(dataStream\);)S
144 507 :M
(if\(p\) p->process\(\))S
108 518 :M
(})S
72 532 :M
f0_10 sf
.167 .017(This is a variant of )J
f1_10 sf
.4 .04(Abstract Factory)J
f0_10 sf
.239 .024([Gamma+94] but the object to be created is)J
72 546 :M
-.067(defined in the data stream, rather than by the client. )A
f1_10 sf
-.076(Factories)A
f0_10 sf
-.069( and )A
f1_10 sf
-.076(Parser/Builder)A
f0_10 sf
(s)S
72 560 :M
.96 .096(can be used to in part implement )J
f1_10 sf
1.384 .138(Loose Interfaces )J
f0_10 sf
1.016 .102( by providing a means of)J
72 574 :M
1.125 .113(separating clients from producers of data \(assuming that data producers also)J
72 588 :M
-.116(define the factories\).)A
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(Ed Morgan; page: 8 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
216 748 :M
f0_10 sf
.867 .087(PLoP '95)J
429 748 :M
(8)S
592 748 :M
-.169(Steve Berczuk)A
216 152 :M
f3_9 sf
4.5 .45(Other uses:)J
216 166 :M
f0_10 sf
.065 .007(In some object persistence mechanisms, objects are assigned class Id's which are)J
216 180 :M
1.005 .101(placed in the storage stream. These Ids are restored first to allow the system)J
216 194 :M
-.058(decide what class object to make from the restored stream.)A
216 214 :M
f1_10 sf
-.02(Parser/Builder)A
f0_10 sf
-.017( is used in in the pattern )A
f1_10 sf
-.021(Query Objects)A
f0_10 sf
( )S
f0_9 sf
0 -3 rm
(5)S
0 3 rm
f0_10 sf
-.022([Chasms] to convert SQL)A
216 228 :M
1.392 .139(statements to QUERY objects. [Riehle96] discusses similar issues, building)J
216 242 :M
.054 .005(objects on a desktop using specifications.)J
216 262 :M
1.274 .127(The distinction between this pattern and )J
f1_10 sf
.339(Builder)A
f0_10 sf
1.304 .13( [Gamma+94] and )J
f1_10 sf
.417(Factory)A
216 276 :M
.142(Method)A
f0_10 sf
.396 .04( [Gamma+94] is that in this pattern the factory reads from a stream and)J
216 290 :M
1.973 .197(the client does not know which type of object will be returned. For text)J
216 304 :M
.227 .023(interpretation, )J
f1_10 sf
.043(Parser/Builder)A
f0_10 sf
.095 .01( can be a front end to the )J
f1_10 sf
.04(Interpreter)A
f0_10 sf
.283 .028( [Gamma+94])J
216 318 :M
-.037(pattern.)A
216 337 :M
10 f2_1 :p
67.836 :m
.184 .018(Also Known As:)J
( )S
f1_10 sf
.275 .027(Composite Factory)J
216 358 :M
.42(Context)A
f0_10 sf
1.142 .114(: Once we decide that the )J
f1_10 sf
.405(Parser/Builder)A
f0_10 sf
1.112 .111( is the right way to create)J
216 372 :M
.675 .067(objects, we need to partition the details of how to construct objects of various)J
216 386 :M
.42 .042(classes into the various groups responsible for this construction, in other words)J
216 400 :M
.08 .008(we need to have )J
f1_10 sf
.171 .017(Loose Interfaces)J
f0_10 sf
.086 .009(. We want to complete )J
f1_10 sf
.16 .016(Form Follows Function)J
216 414 :M
f0_10 sf
.652 .065([Coplien95] or )J
f1_10 sf
.953 .095(Organization Follows Location)J
f0_10 sf
.513 .051( [Coplien95].  On a lower level)J
216 428 :M
.825 .083(we want to implement )J
f1_10 sf
1.116 .112(Developer Controls Process )J
f0_10 sf
1.033 .103([Coplien95] for a system)J
216 442 :M
-.01(which creates objects of various types.)A
216 462 :M
f1_10 sf
.071(Problem)A
f0_10 sf
.213 .021(: In a distributed work group it is important to divide responsibilities as)J
216 476 :M
.572 .057(cleanly as possible and reduce coupling. There should be a way to do this in a)J
216 490 :M
-.011(creational system.)A
216 510 :M
1.516 .152(Sometimes the secrets of classifying elements in a data stream are divided)J
216 524 :M
.439 .044(between various groups. The reasons for this partitioning can involve company)J
216 538 :M
.135 .013(politics, or simply that the knowledge of the telemetry formats is distributed and)J
216 552 :M
1.196 .12(there is a strong desire to reduce coupling.  We need a way to partition the)J
1 G
0 0 1 1 rF
540 552 :M
psb
/wp$gray 0.8000 def

/wp$top 326 def

/wp$left 52 def

/wp$right 200 def

/wp$bottom 340 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
54 338 :M
0 G
f3_10 sf
3.512 .351(3.Hierarchy of Factories)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
216 590.24 -.24 .24 359.24 590 .24 216 590 @a
216 609 :M
f0_9 sf
(5)S
f1_10 sf
0 3 rm
-.043(Query Objects)A
0 -3 rm
f0_10 sf
0 3 rm
-.04( addresses the problem of handling the generation and executation)A
0 -3 rm
216 626 :M
1.331 .133(of SQL statements in an object-oriented way, when you are trying to use a)J
216 640 :M
-.034(relational database to store objects.)A
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(Ed Morgan; page: 9 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 748 :M
f0_10 sf
.867 .087(PLoP '95)J
285 748 :M
(9)S
448 748 :M
-.169(Steve Berczuk)A
72 153 :M
2.052 .205(responsibilities for classifying the telemetry packets, while maintaining a)J
72 167 :M
-.126(centralized client interface.)A
72 187 :M
.498 .05(In a telemetry application, various instruments can generate telemetry which is)J
72 201 :M
.413 .041(then fed into one stream. The instruments are  developed by different teams \(at)J
72 215 :M
-.01(different institutions, for example\),  and these teams have control over the format)A
72 229 :M
1.32 .132(of the telemetry that they generate \(after taking some standard headers into)J
72 243 :M
-.115(account\).)A
72 263 :M
.143 .014(We want a way to isolate the details for identifying each team's objects, while at)J
72 277 :M
1.495 .149(the same time allowing the objects to be identified and created in a single)J
72 291 :M
1.12 .112(application. The scheme that we develop should be layered so that the main)J
72 305 :M
.619 .062(factory needs to know only of the existence of a class of objects, but need not)J
72 319 :M
1.387 .139(know how deep the hierarchy below that class is. Packets created from the)J
72 333 :M
-.023(hierarchy are processed in a generic way,  perhaps by using virtual functions.)A
72 353 :M
4.517 .452(One way to address the classification problem is to put all the)J
72 367 :M
2.161 .216(classification/dispatch logic into a single )J
f1_10 sf
.527(Parser/Builder)A
f0_10 sf
2.289 .229( \(combining the)J
72 381 :M
f1_10 sf
.198(Interpreter)A
f0_10 sf
.752 .075( [Gamma+94] pattern with a )J
f1_10 sf
.898 .09(Builder )J
f0_10 sf
1.087 .109([Gamma+94]\) \321 perhaps by)J
72 395 :M
.481 .048(using a big switch statement\321 and rely on communications between groups to)J
72 409 :M
3.699 .37(ensure that the details make it into the master code through some)J
72 423 :M
.766 .077(communications method. This is error prone, and subject to delays. We could)J
72 437 :M
-.01(also divide the processing into a number of factories and have the client call each)A
72 451 :M
.636 .064(in turn. This violates our requirement of  transparency, and the client needs to)J
72 465 :M
-.042(know when a new class of object is  added.)A
72 485 :M
.782 .078(It would be useful to have a way to have the client interface emulate a single)J
72 499 :M
-.01(Factory, but hide the details of the construction hierarchy.)A
72 519 :M
-.039(To summarize the forces:)A
90 536 :M
<A5>S
108 536 :M
.071 .007(Division of responsibilities \()J
f1_10 sf
.096 .01(Organization Follows Location)J
f0_10 sf
(\).)S
90 547 :M
<A5>S
108 547 :M
1.135 .113(A need for a central interface for parsing data streams and building)J
108 558 :M
.025(objects.)A
90 569 :M
<A5>S
108 569 :M
2.005 .201(A need to add objects to the construction hierarchy in a manner)J
108 580 :M
.049 .005(transparent to clients.)J
90 591 :M
<A5>S
108 591 :M
.041 .004(The ability \(or requirement\) to process entities by virtual functions.)J
90 602 :M
<A5>S
108 602 :M
-.037(Each class of object can know about its immediate derived classes.)A
72 616 :M
f1_10 sf
-.063(Therefore)A
f0_10 sf
-.056(: Use a hierarchy of factories, each of which understands the criteria  for)A
72 630 :M
1.151 .115(making a packet of its type, and knows about the immediate  subtypes. The)J
72 644 :M
1.436 .144(client invokes the make method with the base class  factory instance. That)J
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(Ed Morgan; page: 10 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
216 748 :M
f0_10 sf
.867 .087(PLoP '95)J
427 748 :M
(10)S
592 748 :M
-.169(Steve Berczuk)A
216 153 :M
.227 .023(factory checks to see that there is indeed an object of class packet in the stream,)J
216 167 :M
.065 .006(based on some attributes. The factory then passes the data stream to the factories)J
216 181 :M
.411 .041(of each of its immediate  subclasses, which check the appropriate data fields in)J
216 195 :M
-.094(the manner of  the )A
f1_10 sf
-.102(Parser/Builder)A
f0_10 sf
-.097( pattern.)A
216 215 :M
.289 .029( The )J
f1_10 sf
.148(Singleton)A
f0_10 sf
.521 .052( pattern [Gamma+94] can be used to access the factories for the)J
216 229 :M
-.045(derived classes, or the members of the hierarchy can be registered with the master)A
216 243 :M
.076 .008(factory at run time.)J
216 263 :M
.076 .008( While this pattern violates encapsulation to some extent by requiring that a base)J
216 277 :M
1.895 .19(class know about its immediate subclasses, it can be made acceptable by)J
216 291 :M
-.051(agreeing on generic interface classes \(say, one per team\) and allow each team free)A
216 305 :M
.041 .004(reign to subclass these interface classes. Also in this application this requirement)J
216 319 :M
1.391 .139(is not terribly limiting, since the top level operations team knows abou the)J
216 333 :M
.18 .018(basic instrument team interfaces and the number of instrument teams is fixed by)J
216 347 :M
-.014(contract when the project begins.)A
54 364 :M
f1_9 sf
.251 .025(Hierarchy of Factories)J
216 498 :M
f0_10 sf
.5 .05( )J
219 355 274 143 rC
13 119 167 342 422 @k
-1 -1 291 462 1 1 337 425 @b
300.5 371.5 103 49 rS
387.5 460.5 104 36 rS
248.5 460.5 108 36 rS
13 9 57 365 422 @k
370 426 -1 1 424 460 1 370 425 @a
318 390 :M
f4_12 sf
(PacketFactory)S
259 482 :M
(PacketBFactory)S
401 482 :M
(PacketCFactory)S
331 412 :M
f4_9 sf
(createPacket)S
307 399 -1 1 395 398 1 307 398 @a
gR
gS 31 31 552 730 rC
216 516 :M
f0_10 sf
.207 .021(An example implementation is:)J
216 533 :M
f8_10 sf
(//Base class factory method)S
252 544 :M
.01 .001(Packet* PacketFactory::make\(Stream* dataStream\){)J
252 555 :M
( Packet* pkt=0;)S
252 566 :M
(if\(isAPacket\(dataStream\) {)S
216 577 :M
( )S
252 577 :M
.009 .001(if\(! pkt = APacket::factory\(\)->make\(dataStream\)\))J
252 588 :M
14.578 1.458(  if\(!pkt = BPacket::factory\(\)-)J
216 599 :M
(>make\(dataStream\)\){)S
252 610 :M
(  pkt = new Packet\(dataStream\);)S
252 621 :M
(})S
252 632 :M
(return pkt;)S
252 643 :M
(})S
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(Ed Morgan; page: 11 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 748 :M
f0_10 sf
.867 .087(PLoP '95)J
283 748 :M
(11)S
448 748 :M
-.169(Steve Berczuk)A
72 153 :M
.155 .015( The result of applying  this pattern is that each class needs to know only:)J
90 170 :M
<A5>S
108 170 :M
1.177 .118(The criteria for what constitutes a member of that class in terms of)J
108 181 :M
-.013(elements in the data stream.)A
90 192 :M
<A5>S
108 192 :M
-.038(The immediate subclasses.)A
72 206 :M
.883 .088(It is possible to use a )J
f1_10 sf
.355(Registration)A
f0_10 sf
.196 .02( )J
f0_9 sf
0 -3 rm
.388(6)A
0 3 rm
f0_10 sf
1.254 .125( mechanism to inform the base class of)J
72 220 :M
1.65 .165(what the subclasses are rather than hard coding the relationship. It is also)J
72 234 :M
.146 .015(possible to implement this pattern using containment rather than inheritance.)J
72 257 :M
f3_9 sf
4.5 .45(Other uses:)J
72 271 :M
f0_10 sf
1.092 .109(This pattern is also useful for isolating the definition of packets for which a)J
72 285 :M
.922 .092(single team is responsible, so the information can be encapsulated, making it)J
72 299 :M
-.019(easier to work on a project with large or widely distributed teams.)A
72 322 :M
f3_9 sf
5.2 .52(Related Patterns)J
72 336 :M
f0_10 sf
.482 .048(This is similar to the )J
f1_10 sf
.178(Builder)A
f0_10 sf
.591 .059( [Gamma+94] pattern in that it has a hierarchy of)J
72 350 :M
.057 .006("factories." It is different in that the data stream defines what is made rather than)J
72 364 :M
.636 .064(the application explicitly specifying what objects to construct by argumenst to)J
72 378 :M
-.048(the factory.)A
72 398 :M
2.174 .217(This pattern helps us realize )J
f1_10 sf
3.904 .39(Organization Follows Location)J
f0_10 sf
1.179 .118( and )J
f1_10 sf
1.067(Code)A
72 412 :M
-.036(Ownership)A
f0_10 sf
-.034( [Coplien95])A
72 432 :M
( )S
f1_10 sf
-.043(Context)A
f0_10 sf
-.039(: This pattern provides for decoupling needed to implement )A
f1_10 sf
-.046(Organization)A
72 446 :M
.371 .037(Follows Location)J
f0_10 sf
.211 .021( [Coplien95], for the products of a creational system. After we)J
72 460 :M
.766 .077(assemble packets from the telemetry stream we process them, generating data)J
72 474 :M
-.066(products. We need a way to direct the processing of these new data products.)A
1 G
0 0 1 1 rF
375 474 :M
psb
/wp$gray 0.8000 def

/wp$top 420 def

/wp$left 412 def

/wp$right 560 def

/wp$bottom 434 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
414 432 :M
0 G
f3_10 sf
2.555 .255(4. Handlers )J
f9_9 sf
0 -3 rm
(7)S
0 3 rm
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
72 514.24 -.24 .24 215.24 514 .24 72 514 @a
72 533 :M
f0_9 sf
.137(6)A
f0_10 sf
0 3 rm
.457 .046(This pattern is not yet written, but would specify a mechanism for notifying a)J
0 -3 rm
72 550 :M
.599 .06(base class factory that a derived class factory has been created. The basic idea)J
72 564 :M
1.134 .113(would be similar to the View/Model connection in a Model/View/Controller)J
72 578 :M
.612 .061(mechanism, but would also address issues of uniqueness \(only one instance of)J
72 592 :M
1.411 .141(each derived class can notify a base class\) and guaranteed notification \(the)J
72 606 :M
1.716 .172(construction of any object/factory of the derived classes would generate a)J
72 620 :M
-.013(registration event automatically\).)A
72 637 :M
f0_9 sf
-.064(7)A
f0_10 sf
0 3 rm
-.061(Adapted from PLoP 94 paper. See [Berczuk95] for details.)A
0 -3 rm
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(Ed Morgan; page: 12 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
216 748 :M
f0_10 sf
.867 .087(PLoP '95)J
427 748 :M
(12)S
592 748 :M
-.169(Steve Berczuk)A
216 153 :M
f1_10 sf
.257(Problem)A
f0_10 sf
.933 .093(: In an environment where components developed by separate teams)J
216 167 :M
1.63 .163(with different specific goals must inter-operate, it is necessary to partition)J
216 181 :M
2.692 .269(responsibilities in such a way that dependencies can be reduced while)J
216 195 :M
.491 .049(interoperability is maintained. In particular well defined portions of the system)J
216 209 :M
1.365 .136(should be isolated fron the to be specified pieces. This may be particularly)J
216 223 :M
-.027(important if the teams are geographically distributed.)A
216 243 :M
-.021(To summarize the forces at work:)A
216 263 :M
<A5>S
234 263 :M
-.048(The requirements for the end to end system are not complely specified.)A
216 283 :M
<A5>S
234 283 :M
.792 .079(Requirements for one component of a system need to be available before)J
234 297 :M
-.103(downstream processing is defined.)A
216 317 :M
<A5>S
234 317 :M
1.927 .193(Upstream and downstream components will be demonstrated/tested at)J
234 331 :M
-.072(different times.)A
216 351 :M
<A5>S
234 351 :M
-.005(Upstream components should know nothing of the downstream processing.)A
54 368 :M
f1_9 sf
.505 .051(Callback Pattern)J
216 599 :M
f0_10 sf
.5 .05( )J
219 359 288 240 rC
290.5 383.5 88 38 rS
383.5 465.5 88 38 rS
252.5 471.5 88 38 rS
313 407 :M
f4_12 sf
(Factory)S
13 192 240 407 463 @k
353 424 -1 1 403 460 1 353 423 @a
403 488 :M
(Entity)S
381 438 :M
f4_10 sf
(creates)S
261 495 :M
f4_12 sf
(Application)S
13 105 153 318 421 @k
-1 -1 279 471 1 1 314 426 @b
299 458 :M
f4_10 sf
-.012(Instantiates)A
252.5 565.5 307.5 597.5 2.5 @s
261 580 :M
f3_12 sf
(Entity)S
261 593 :M
(Class)S
326.5 562.5 73 34 rS
338 581 :M
f4_12 sf
(Handler)S
-1 -1 319 536 1 1 318 508 @b
13 -76 -28 296 563 @k
-1 -1 301 559 1 1 318 535 @b
13 192 240 348 558 @k
318 537 -1 1 344 555 1 318 536 @a
321 528 :M
f4_10 sf
(Associates)S
13 -62 -14 375 558 @k
-1 -1 381 555 1 1 444 503 @b
432 533 :M
(Sends Self to)S
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(Ed Morgan; page: 13 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 748 :M
f0_10 sf
.867 .087(PLoP '95)J
283 748 :M
(13)S
448 748 :M
-.169(Steve Berczuk)A
72 153 :M
f1_10 sf
.209(Solution)A
f0_10 sf
.898 .09(: Use a callback mechanism to define connections between assembly)J
72 167 :M
1.421 .142(process and the processing process. Provide a mechanism \()J
f1_10 sf
.339(Registration)A
f0_10 sf
.862 .086(\) to)J
72 181 :M
-.069(assign a )A
f1_10 sf
-.086(Handler)A
f0_10 sf
-.074( object for which a completed entity will be forwarded.)A
72 201 :M
-.011(One implementation uses a static )A
f1_10 sf
-.013(Handler)A
f0_10 sf
-.011( data member for class )A
f1_10 sf
(Unit)S
f0_10 sf
-.014(. Whenever)A
72 215 :M
(a )S
f1_10 sf
-.02(Unit)A
f0_10 sf
-.016( is completed it hands itself to the )A
f1_10 sf
-.021(Handler)A
f0_10 sf
-.018( for processing.)A
72 235 :M
.532 .053(The issue of when to subclass and when to differentiate objects by an attribute)J
72 249 :M
.074 .007(can be a confusing one, and can only be resolved by examing the specific details)J
72 263 :M
.02 .002(such as the number of classes, and the type of behaviour.)J
72 283 :M
2.032 .203(This pattern is similar to )J
f1_10 sf
.726(Observer)A
f0_10 sf
2.371 .237( [Gamma+94] but differs in that the)J
72 297 :M
.871 .087("observer" is the class of object being created, and the event that triggers the)J
72 311 :M
.1 .01(notification is the creation of an object of a class.)J
72 331 :M
1.6 .16(Organizational issues play a significant role in determining the direction a)J
72 345 :M
2.261 .226(software system can take. They affect the context in which a system is)J
72 359 :M
.844 .084(developed. It is also necessary to architect a system to minimize the negative)J
72 373 :M
.276 .028(effects of organizational issues. When the  organizational patterns such as those)J
72 387 :M
1.508 .151(in [Coplien95] exist, there should be ways to architect a system to aid the)J
72 401 :M
.934 .093(realization of good organizational patterns. This paper illustrates some of the)J
72 415 :M
.607 .061(ways to reflect organizational issues in the context of other patterns as well as)J
72 429 :M
1.013 .101(showing some ways to implement good organizational patterns in a software)J
72 443 :M
-.14(architecture.)A
72 463 :M
.806 .081(There is a common structure to scientific satellite applications, and there also)J
72 477 :M
.064 .006(tends to be little carryover of personnel between projects, so many of the lessons)J
72 491 :M
.696 .07(learned must be rediscovered. Since there are different hardware and software)J
72 505 :M
1.442 .144(platforms from one project to the next and the details of each project vary)J
72 519 :M
2.068 .207(greatly, )J
f1_10 sf
2.58 .258(code reuse)J
f0_10 sf
1.412 .141( is not really feasible. )J
f1_10 sf
3.157 .316(Design elements)J
f0_10 sf
1.619 .162( can be reused,)J
72 533 :M
.597 .06(however. This application domain, and others which share these factors, could)J
72 547 :M
-.035(benefit greatly from documentation of architectural principles as patterns.)A
72 567 :M
.273 .027(While the patterns explicitly address scientific spacecraft satellite telemetry, the)J
72 581 :M
.24 .024(ideas in this paper can be applicable to any system being built with a number of)J
72 595 :M
2.41 .241(distinct teams. Some of the patterns such as )J
f1_10 sf
.73(Parser/Builder)A
f0_10 sf
2.348 .235( also have)J
72 609 :M
.137 .014(applicability in other creational systems.)J
1 G
0 0 1 1 rF
235 609 :M
psb
/wp$gray 0.8000 def

/wp$top 319 def

/wp$left 412 def

/wp$right 560 def

/wp$bottom 333 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
414 331 :M
0 G
f3_10 sf
.701(Conclusions)A
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(Ed Morgan; page: 14 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
216 748 :M
f0_10 sf
.867 .087(PLoP '95)J
427 748 :M
(14)S
592 748 :M
-.169(Steve Berczuk)A
1 G
0 0 1 1 rF
648 748 :M
psb
/wp$gray 0.8000 def

/wp$top 144 def

/wp$left 52 def

/wp$right 200 def

/wp$bottom 158 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
54 156 :M
0 G
f3_10 sf
1.011(References)A
216 153 :M
f0_10 sf
-.07([Berczuk95] Berczuk, Steve, "Handlers for Separating Assembly and Processing.")A
252 164 :M
(In )S
f1_10 sf
-.013(Pattern Languages of Program Design)A
f0_10 sf
-.013(. James O. Coplien & Douglas)A
252 175 :M
-.009(Schmidt Eds. Reading, MA: Addison Wesley, 1995.)A
216 198 :M
2.115 .212([Coplien95] Coplien, James. "A Development Process Generative Pattern)J
252 209 :M
2.099 .21(Language." In )J
f1_10 sf
2.504 .25(Pattern Languages of Program Design)J
f0_10 sf
1.728 .173(. James O.)J
252 220 :M
1.69 .169(Coplien & Douglas Schmidt Eds. Reading, MA: Addison Wesley,)J
252 231 :M
.125(1995.)A
216 254 :M
1.139 .114([Gamma+94] Eric Gamma, Ralph Johnson, Richard Helm & John Vlissides,)J
252 265 :M
f1_10 sf
.746 .075(Design Patterns: Elements of Object-Oriented Software Architecture)J
f0_10 sf
(.)S
252 276 :M
-.043(Addison Wesley, 1994.)A
216 299 :M
.411 .041([Beck] Beck, Kent. )J
f1_10 sf
.626 .063(Early Development Patterns.)J
f0_10 sf
.514 .051( Portland Patterns Repository.)J
252 310 :M
.575 .058(URL: http://c2.com/ppr/early.html.)J
216 333 :M
.979 .098([Chasms] Brown, Kyle and Whitenack, Bruce. "Crossing Chasms\320 A Pattern)J
252 344 :M
1.029 .103(Language for Object-RDBMS Integration." In )J
f1_10 sf
1.135 .114(Pattern Languages of)J
252 355 :M
1.18 .118(Program Design)J
f0_10 sf
.686 .069(., Volume II John Vlissides, Norm Kerth, and James)J
252 366 :M
.087 .009(O. Coplien Eds. Reading, MA: Addison Wesley, 1996.)J
216 389 :M
.9 .09([Riehle96] Riehle, Dirk. "Patterns for Encapsulating Class Trees." In )J
f1_10 sf
.259(Pattern)A
252 400 :M
2.212 .221(Languages of Program Design)J
f0_10 sf
1.713 .171(., Volume II John Vlissides, Norm)J
252 411 :M
1.427 .143(Kerth, and James O. Coplien Eds. Reading, MA: Addison Wesley,)J
252 422 :M
.125(1996.)A
216 436 :M
.391 .039(Thanks to Dirk Riehle, Doug Lea and Lena Davis for reviewing early and final)J
216 450 :M
.927 .093(drafts, and the members of the PLoP working group for making many useful)J
216 464 :M
.66 .066(suggestions. The IM Pei home group at PLoP 95 made helpful suggestions on)J
216 478 :M
.479 .048(how to reference other patterns, and the Appendix is based on their ideas. This)J
216 492 :M
.069 .007(work was supported in part by NASA/GSFC contract number NAS5-30612.)J
216 521 :M
f4_10 sf
.47 .047(Authors address: Room 37-561; 77 Massachusetts Ave, Cambridge MA)J
216 532 :M
.509 .051(02139. current email address; berczuk@acm.org.)J
1 G
0 0 1 1 rF
362 532 :M
psb
/wp$gray 0.8000 def

/wp$top 424 def

/wp$left 52 def

/wp$right 200 def

/wp$bottom 438 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
54 436 :M
0 G
f3_10 sf
.807(Acknowledgements)A
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(Ed Morgan; page: 15 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
72 748 :M
f0_10 sf
.867 .087(PLoP '95)J
283 748 :M
(15)S
448 748 :M
-.169(Steve Berczuk)A
1 G
0 0 1 1 rF
504 748 :M
psb
/wp$gray 0.8000 def

/wp$top 144 def

/wp$left 412 def

/wp$right 560 def

/wp$bottom 158 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
414 156 :M
0 G
f3_10 sf
3.083 .308(Appendix:  Brief)J
1 G
0 0 1 1 rF
502 156 :M
psb
/wp$gray 0.8000 def

/wp$top 158 def

/wp$left 412 def

/wp$right 560 def

/wp$bottom 172 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
414 170 :M
0 G
3.846 .385(Descriptions of)J
1 G
0 0 1 1 rF
496 170 :M
psb
/wp$gray 0.8000 def

/wp$top 172 def

/wp$left 412 def

/wp$right 560 def

/wp$bottom 186 def

/wp$box {newpath wp$left wp$bottom moveto wp$left wp$top lineto wp$right wp$top lineto wp$right wp$bottom lineto closepath } def

wp$gray setgray wp$box fill

pse
414 184 :M
0 G
5.633 .563(Referenced Patterns)J
72 153 :M
f0_10 sf
1.428 .143(This appendix briefly describes the intent of the referenced patterns. These)J
72 167 :M
.801 .08(summaries are quite brief and the orginal pattern should be consulted to fully)J
72 181 :M
-.11(understand it.)A
72 204 :M
f3_9 sf
3.528 .353(Patterns from "A Development Process Generative Pattern)J
72 215 :M
4.918 .492(Language" [Coplien95].)J
72 229 :M
f0_10 sf
.093 .009(These summaries are an adaptation of the work of the IM Pei group at PLoP 95.)J
72 249 :M
f1_10 sf
1.056 .106(Architect Controls Product)J
f0_10 sf
.686 .069(. Describes how a central architect in a controlling)J
72 263 :M
-.044(role can help build a cohesive product.)A
72 283 :M
f1_10 sf
1.761 .176(Code Ownership)J
f0_10 sf
.947 .095(.  Modules are assigned to developers who control then and)J
72 297 :M
1.399 .14(typically make all changes. This simplifies the task of keeping up with the)J
72 311 :M
.047 .005(details of the entire system.)J
72 331 :M
f1_10 sf
.894 .089(Developer Controls Process)J
f0_10 sf
.421 .042(. .  Use a developer as a focal point for the project)J
72 345 :M
-.045(communication and process for the development of a given feature.)A
72 365 :M
f1_10 sf
.506 .051(Form Follows Function)J
f0_10 sf
.327 .033(. . In a project lacking well-defined roles, group closely)J
72 379 :M
.641 .064(related activities \(those coupled by either implementation, manipulation of the)J
72 393 :M
-.053(same artifacts, or domain related\)  together.)A
72 413 :M
f1_10 sf
.812 .081(Organization Follows Location)J
f0_10 sf
.565 .056(. When assigning tasks arcoss a geographically)J
72 427 :M
1.039 .104(distributed workforce, assign architectural responsibilities in such a way that)J
72 441 :M
-.065(decisions can be made locally.)A
72 461 :M
f1_10 sf
.43 .043(Solo Virtuoso)J
f0_10 sf
.292 .029(. Design and implementation of a small software product which is)J
72 475 :M
-.004(required in a short time should  be done by one or two people.)A
72 498 :M
f3_9 sf
2.821 .282(Patters from )J
f7_9 sf
3.309 .331(Design Patterns )J
f3_9 sf
.952([Gamma+94].)A
72 512 :M
f0_10 sf
2.414 .241(These summaries are from the intent summaries on the inside cover of)J
72 526 :M
-.159([Gamma+94], and are repeated here for reference.)A
72 546 :M
f1_10 sf
-.103(Abstract Factory)A
f0_10 sf
-.096(. Provide an interface for creating families of related or deoendent)A
72 560 :M
-.01(objects without specifying their concrete classes.)A
72 580 :M
f1_10 sf
.025(Builder)A
f0_10 sf
.094 .009(. Spearate the construction of a complex object from its representation so)J
72 594 :M
-.061(that the same construction process can create different representations.)A
72 614 :M
f1_10 sf
.281 .028(Factory Method)J
f0_10 sf
.152 .015(. Define an interface for creating an object but let classes decide)J
72 628 :M
.16 .016(which classes to instantiate.)J
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(Ed Morgan; page: 16 of 16)setjob
%%EndPageSetup
-31 -31 :T
gS 31 31 552 730 rC
216 748 :M
f0_10 sf
.867 .087(PLoP '95)J
427 748 :M
(16)S
592 748 :M
-.169(Steve Berczuk)A
216 153 :M
f1_10 sf
-.007(Interpreter)A
f0_10 sf
-.007(. Given a language, define a representation for its grammar along with)A
216 167 :M
-.014(an interpreter that uses the representation to interpret sentences in the language.)A
216 187 :M
f1_10 sf
.211(Singleton)A
f0_10 sf
.686 .069(. Ensure a class only has one instance, and provide a global point of)J
216 201 :M
.198 .02(access to it.)J
216 224 :M
f3_9 sf
3.698 .37(Patterns from Early Development Patterns [Beck])J
216 238 :M
f1_10 sf
1.555 .155(Early Program)J
f0_10 sf
.907 .091(. Build concrete software early on that shows how the system)J
216 252 :M
-.061(works and fulfills specified scenarios.)A
endp
%%Trailer
end
%%EOF
