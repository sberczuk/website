%!PS-Adobe-3.0
%%Title: (Rewrite)
%%Creator: (Microsoft Word: LaserWriter 8 8.2)
%%CreationDate: (8:48 PM Sunday, July 28, 1996)
%%For: ()
%%Pages: 6
%%DocumentFonts: AvantGarde-Book AvantGarde-Demi Helvetica-Bold Palatino-Roman Palatino-Italic
%%DocumentNeededFonts: AvantGarde-Book AvantGarde-Demi Helvetica-Bold Palatino-Roman Palatino-Italic
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%%DocumentMedia: Default 612 792 0 () ()
%ADO_ImageableArea: 30 31 582 761
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(Rewrite)def
/Creator(Microsoft Word: LaserWriter 8 8.2)def
/CreationDate(8:48 PM Sunday, July 28, 1996)def
/For()def
/Pages 1 def
end def end
/md 145 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *PageRegion LetterSmall
level2 {
		2 dict dup /PageSize [612 792] put dup /ImagingBBox [30 31 582 761] put setpagedevice
	}{
		/lettersmall where {pop lettersmall} {letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
()setjob
/mT[1 0 0 -1 30 761]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: AvantGarde-Book
%%IncludeFont: AvantGarde-Demi
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Palatino-Roman
%%IncludeFont: Palatino-Italic
/f0_1/AvantGarde-Book
:mre
/f0_12 f0_1 12 scf
/f1_1/AvantGarde-Demi
:mre
/f1_14 f1_1 14 scf
/f1_12 f1_1 12 scf
/f2_1/Helvetica-Bold
:mre
/f2_14 f2_1 14 scf
/f3_1/Palatino-Roman
:mre
/f3_12 f3_1 12 scf
/f3_10 f3_1 10 scf
/f3_9 f3_1 9 scf
/f4_1/Palatino-Italic
:mre
/f4_12 f4_1 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(; page: 1 of 6)setjob
%%EndPageSetup
gS 0 0 552 730 rC
60 722 :M
f0_12 sf
.052 .005(SCM Patterns)J
272 722 :M
(1)S
420 722 :M
.075 .007(July 28, 1996)J
156 61 :M
f2_14 sf
-.033(Configuration Management Patterns)A
236 81 :M
f3_12 sf
2.035 .204(Steve Berczuk)J
192 95 :M
1.208 .121(Optimax Systems Corporation)J
238 109 :M
.177 .018(201 Broadway)J
217 123 :M
.434 .043(Cambridge MA 02139)J
212 137 :M
.349(berczuk@optimax.com)A
96 159 :M
1.216 .122(Configuration management is an important aspect of an efficient)J
96 173 :M
5.244 .524(development process. As with other aspects of software)J
96 187 :M
5.788 .579(development, configuration management happens in the)J
96 201 :M
2.577 .258(presence of social and organizational constraints. The various)J
96 215 :M
6.011 .601(goals of configuration management \(stability, developer)J
96 229 :M
1.329 .133(independence and interaction, etc.\) sometimes conflict with each)J
96 243 :M
3.836 .384(other. This paper presents three configuration management)J
96 257 :M
1.239 .124(patterns and shows how the forces between them balance out. It)J
96 271 :M
1.186 .119(also relates them to organizational patterns)J
60 317 :M
f1_14 sf
-.223(Introduction)A
60 338 :M
f3_12 sf
1.16 .116(Software configuration management \(SCM\) is an important aspect of)J
60 352 :M
.72 .072(development process. A good SCM process makes it possible for teams of)J
60 366 :M
1.066 .107(developers to work together on a project  effectively. While there are various)J
60 380 :M
.833 .083(tools that can make the process simpler, there are certain patterns  for)J
60 394 :M
1.861 .186(software configuration management)J
f3_9 sf
0 -3 rm
.23(1)A
0 3 rm
f3_12 sf
1.176 .118( that exist unsuccessful  development)J
60 408 :M
1.074 .107(organizations. \(A detailed discussion of Configuration Management can be)J
60 422 :M
1.067 .107(found in [Humphrey90] among other sources.\))J
60 444 :M
1.231 .123(A successful configuration management process allows:)J
96 466 :M
<A5>S
114 466 :M
1.035 .104(Developers to work together on a project, sharing common code.)J
96 488 :M
<A5>S
114 488 :M
.78 .078(Developers to share development effort on a body of code.)J
96 510 :M
<A5>S
114 510 :M
.776 .078(Developers to have access to the current stable \(tested\) version of a)J
114 524 :M
.151(system.)A
96 546 :M
<A5>S
114 546 :M
.783 .078(The ability to back up to a previous stable version \(one of a number)J
114 560 :M
.854 .085(of )J
f4_12 sf
1.67 .167(Named Stable Bases )J
f3_12 sf
1.58 .158([Coplien95]\), of a )J
f4_12 sf
.546(system)A
96 582 :M
f3_12 sf
<A5>S
114 582 :M
.792 .079(The ability of a developer to checkpoint changes to a module and to)J
114 596 :M
1.129 .113(back off  to a previous version of that )J
f4_12 sf
.432(module)A
f3_12 sf
(.)S
-4126 -4126 -1 1 -4124 -4126 1 -4126 -4127 @a
60 650.24 -.24 .24 203.24 650 .24 60 650 @a
60 671 :M
f3_9 sf
-.069(1)A
f3_10 sf
0 3 rm
-.074(These patterns focus on source code configuration management. A complete SCM system should)A
0 -3 rm
60 686 :M
.274 .027(also take testing, tools, and other elements of the software process into account.)J
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(; page: 2 of 6)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
90 753 :M
f0_12 sf
.052 .005(SCM Patterns)J
302 753 :M
(2)S
450 753 :M
.075 .007(July 28, 1996)J
90 82 :M
f3_12 sf
1.205 .121(Attaining all of these goals involves compromises \(many people working of)J
90 96 :M
.902 .09(one body of code makes maintaining consistency difficult, for example\).  This)J
90 110 :M
.711 .071(paper presents 3 patterns that illustrate how the problems presented by)J
90 124 :M
1.264 .126(configuration management problems can conflict with each other, and how)J
90 138 :M
.8 .08(the various forces can be balanced.  We also show how SCM interacts with)J
90 152 :M
.602 .06(some of the organizational process patterns described by Coplien [Coplien95].)J
90 174 :M
.585 .058(The goals of this paper are to:)J
126 196 :M
<A5>S
144 196 :M
.775 .077(Illustrate how patterns can be applied to the mechanics of software)J
144 210 :M
.447(development.)A
126 232 :M
<A5>S
144 232 :M
1.403 .14(Show how configuration management patterns can interact with)J
144 246 :M
1.687 .169(organizational patterns.)J
126 268 :M
<A5>S
144 268 :M
1.107 .111(Provide an illustration of how the forces in some patterns interact,)J
144 282 :M
.694 .069(and how one can try to balance conflicting forces.)J
90 316 :M
f1_14 sf
-.13(Private Versioning)A
f3_9 sf
0 -3 rm
(2)S
0 3 rm
90 337 :M
f3_12 sf
1.054 .105(A developer should have a way to checkpoint changes without making these)J
90 351 :M
1.201 .12(changes available to the development team at large. We want to implement)J
90 365 :M
f4_12 sf
1.9 .19(Code Ownership)J
f3_12 sf
1.332 .133(\(17\) [Coplien95] but subsystems never work entirely in)J
90 379 :M
.384(isolation.)A
90 399 :M
f1_12 sf
.093(Problem:)A
90 420 :M
f3_12 sf
1.037 .104(Periodic integration of a developer's work with that of other members of the)J
90 434 :M
1.299 .13(development team is important for ensuring stability. Checkpointing only)J
90 448 :M
.811 .081(after completing major changes can make it difficult to back off of one phase)J
90 462 :M
.792 .079(of a change. Using the revision control area for this can lead to changes being)J
90 476 :M
.939 .094("published" before they are ready for integration.  Also, publishing)J
90 490 :M
1.032 .103(intermediate changes can lead to a deceptive number of revisions listed in the)J
90 504 :M
.598 .06(SCM system. It is necessary to be able to save intermediate steps in a change in)J
90 518 :M
.842 .084(case a coding step results in an error. This is particularly important when:)J
108 540 :M
<A5>S
126 540 :M
.979 .098(The mechanism for specifying that a version is ready for integration is)J
126 554 :M
.902 .09(primitive, and another developer has access to a version as soon as it is)J
126 568 :M
.737 .074(checked it.)J
108 590 :M
<A5>S
126 590 :M
1.055 .105(There is a desire to keep the revision history database "uncluttered")J
126 604 :M
.823 .082(with only significant changes logged.)J
90 626 :M
.317(therefore:)A
90 648 :M
f4_12 sf
3.738 .374(Developers should be provided with a mechanism for check pointing changes)J
90 662 :M
2.321 .232(at a granularity that they are comfortable with. This can be provided for by a)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
90 693.24 -.24 .24 233.24 693 .24 90 693 @a
90 714 :M
f3_9 sf
.053(2)A
f3_10 sf
0 3 rm
.195 .02(This pattern was inspired by work done by Doug Alan at the MIT Center for Space Research.)J
0 -3 rm
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(; page: 3 of 6)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
90 753 :M
f0_12 sf
.052 .005(SCM Patterns)J
302 753 :M
(3)S
450 753 :M
.075 .007(July 28, 1996)J
90 82 :M
f4_12 sf
2.759 .276(local revision control area, Only stable code sets are checked into the team)J
90 96 :M
4.526 .453(version control repository.)J
153 108 305 208 rC
208.5 150.5 73 39 rS
221 174 :M
f3_9 sf
-.036(Developer's )A
221 183 :M
(Source  area)S
377.5 146.5 79 39 rS
380 165 :M
-.042(Other Developers)A
265.5 261.5 102 53 rS
281 290 :M
(Project Repository)S
158.5 228.5 60 33 rS
168 246 :M
(Local )S
168 255 :M
(Repository)S
13 28 76 253 189 @k
257 195 -1 1 310 261 1 257 194 @a
281 218 :M
-.074(gets Files)A
13 -83 -35 199 224 @k
-1 -1 203 220 1 1 220 189 @b
160 201 :M
-.046(checkpoints)A
13 212 260 281 261 @k
234 191 -1 1 279 256 1 234 190 @a
232 248 :M
(Delivers )S
13 104 152 399 183 @k
13 -76 -28 338 261 @k
-1 -1 343 257 1 1 395 188 @b
gR
gS 30 31 552 730 rC
90 334 :M
f3_12 sf
1.414 .141(It is important to make sure that developers using )J
f4_12 sf
2.545 .255(Private Versioning)J
90 348 :M
f3_12 sf
1.034 .103(remember to migrate changes to the shared version control system at)J
90 362 :M
1.937 .194(reasonable intervals.)J
90 384 :M
.95 .095(This pattern provides a way to automate the checkpointing of changes, which)J
90 398 :M
.76 .076(could alternatively be done by making copies of files before making changes,)J
90 412 :M
1.563 .156(thus providing the local history mechanism. The revision control)J
90 426 :M
.983 .098(mechanism could also provide a means for restricting access to checked-in)J
90 440 :M
.613 .061(versions that are not yet ready for use by others, and could also provide a)J
90 454 :M
1.317 .132(mechanism for filtering log messages to eliminate trivial changes.)J
90 488 :M
f1_14 sf
-.194(Incremental Integration)A
90 509 :M
f3_12 sf
1.329 .133(Some organizations have infrequent integrations which reflect large changes.)J
90 523 :M
.776 .078(This can make it difficult for the integration release to work as expected, and)J
90 537 :M
1.288 .129(result in )J
f4_12 sf
2.11 .211(Named Stable Bases)J
f3_12 sf
2.557 .256(. [Coplien95])J
90 557 :M
f1_12 sf
.093(Problem:)A
90 578 :M
f3_12 sf
.967 .097(For iterative development to work well, it is necessary to make sure that)J
90 592 :M
.868 .087(components work together. Subsystems get developed at different rates.)J
90 606 :M
2.114 .211(Developers work with )J
f4_12 sf
3.408 .341(Independent Development)J
f3_12 sf
1.295 .13(. We need to find a way to)J
90 620 :M
.862 .086(make it possibly to integrate without surprises.)J
90 642 :M
.317(therefore:)A
90 664 :M
f4_12 sf
3.247 .325(Provide a mechanism to allow developers to build all the current software)J
90 678 :M
3.994 .399(periodically. Developers should be discouraged from maintaining long)J
90 692 :M
3.102 .31(intervals between "check-ins."  Developers should also be able to build)J
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(; page: 4 of 6)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
90 753 :M
f0_12 sf
.052 .005(SCM Patterns)J
302 753 :M
(4)S
450 753 :M
.075 .007(July 28, 1996)J
90 82 :M
f4_12 sf
1.714 .171(against any of the )J
f3_12 sf
3.218 .322(Named Stable Bases,)J
f4_12 sf
1.902 .19( or the newest checked in software, at)J
90 96 :M
.834(will.)A
90 118 :M
f3_12 sf
1.059 .106(Assign the task of building the entire software system periodically. )J
f4_12 sf
.433(Named)A
90 132 :M
1.449 .145(Stable Bases)J
f3_12 sf
1.106 .111( suggests intervals no more frequent that a week. This periodic)J
90 146 :M
.782 .078(build should be checked for interface compatibility \(does it compile?\) and)J
90 160 :M
1.209 .121(testing \(Does it still work?\) This can be combined with )J
f4_12 sf
.389(Independent)A
90 174 :M
.42(Development)A
f3_12 sf
1.45 .145( when a developer ensures that the changes integrate with a)J
90 188 :M
.918 .092(copy of the current development system. There are issues relating to the size)J
90 202 :M
.73 .073(of the project, the size of the software system \(some systems take quite a while)J
90 216 :M
1.203 .12(to build, making frequent integrations difficult\). Balance this with )J
f4_12 sf
.32(Private)A
90 230 :M
.301(Versions)A
f3_12 sf
1.153 .115( to allow the developer some leeway on deciding when to integrate)J
90 244 :M
.944 .094(new code into their environment, but do not put it off for too  long.)J
90 278 :M
f1_14 sf
-.12(Independent Development)A
90 299 :M
f3_12 sf
1.132 .113(It has been decided to implement )J
f4_12 sf
1.494 .149(Named Stable Bases)J
f3_12 sf
1.441 .144( \(31\)[Coplien95] .)J
90 313 :M
.91 .091(However, we must balance the need to keep up to date by )J
f4_12 sf
.3(Incremental)A
90 327 :M
.341(Integration)A
f3_12 sf
1.424 .142(, with the desire of developers to maintain a stable environment)J
90 341 :M
1.039 .104(for feature development/bug fixing.)J
90 361 :M
f1_12 sf
.093(Problem:)A
90 382 :M
f3_12 sf
.785 .078(How can we balance the need for developers to use current revisions, based)J
90 396 :M
.853 .085(on periodic baselines, with the desire to avoid undue grief by having)J
90 410 :M
1.806 .181(development dependencies change from underneath them?)J
90 432 :M
.987 .099(It is important for developers to work with current versions of software)J
90 446 :M
1.194 .119(subsystems to keep up with the latest enhancements, avoid running into)J
90 460 :M
.552 .055(already fixed bugs fixed elsewhere, and to avoid getting out of synch with)J
90 474 :M
.894 .089(interface changes.  A developer who keeps changes un-released \(or not)J
90 488 :M
.956 .096(checked in to the version control system\) can cause surprises to other team)J
90 502 :M
2.335 .234(members. )J
f4_12 sf
2.051 .205(Named Stable Bases)J
f3_12 sf
1.704 .17( recommends integrations at an interval of no)J
90 516 :M
1.343 .134(more than once a week. Introducing new software into an environment)J
90 530 :M
.772 .077(while debugging may cause grief by introducing new behavior, and providing)J
90 544 :M
1.092 .109(distractions because of the time spent resolving integration issues \321 in some)J
90 558 :M
.739 .074(cases, code may no longer compile due to interface changes.)J
90 580 :M
1.823 .182(Some organizations, to facilitate )J
f4_12 sf
2.113 .211(Incremental  Integration)J
f3_12 sf
1.364 .136(, will have a shared)J
90 594 :M
.715 .071(baseline of code, libraries, etc. Unfortunately changing a code base, even in a)J
90 608 :M
.85 .085(different subsystem, can cause problems when there are interface changes, for)J
90 622 :M
.989 .099(example. You want to avoid hearing stories about developers leaving a)J
90 636 :M
.908 .091(problem at night to view it in the morning with a clear head, only to find that)J
90 650 :M
1.734 .173(one's test environment does not compile.)J
90 672 :M
.317(therefore:)A
90 694 :M
f4_12 sf
4.482 .448(Provide a mechanism where developers can maintain independent)J
90 708 :M
4.29 .429(development environments, This allows them to avoid having an)J
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(; page: 5 of 6)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
90 753 :M
f0_12 sf
.052 .005(SCM Patterns)J
302 753 :M
(5)S
450 753 :M
.075 .007(July 28, 1996)J
90 82 :M
f4_12 sf
3.725 .372(integration step interrupt work in progress. The environment should)J
90 96 :M
2.763 .276(represent a snapshot of all the software being developed in a system, not just)J
90 110 :M
2.946 .295(the code the developer is modifying. Try to ensure that the private)J
90 124 :M
2.988 .299(development area is not used as a crutch though.)J
90 146 :M
f3_12 sf
1.761 .176(This pattern conflicts somewhat with )J
f4_12 sf
2.071 .207(Incremental Integration )J
f3_12 sf
1.027 .103( as in the case)J
90 160 :M
.894 .089(where a developer delays retrieving  the current release for too long.)J
90 182 :M
1.021 .102(A consequence of this pattern is that, depending on how this is implemented,)J
90 196 :M
.654 .065(the disk space requirements of a project may grow quickly as N developers)J
90 210 :M
.921 .092(will have their own copies of the source code. But often the costs of personnel)J
90 224 :M
.597 .06(greatly exceed the cost of an extra disk. A modification to this approach is that)J
90 238 :M
.419 .042(stable, and distantly related subsystems can be used by reference, but one)J
90 252 :M
.921 .092(should be made aware of when changes are imminent. In this case the CM)J
90 266 :M
1.328 .133(system should provide access to prior )J
f4_12 sf
1.304 .13(Named Stable Bases )J
f3_12 sf
1.499 .15(as well.)J
90 288 :M
.981 .098(A variation on this pattern is to allow developers simply to defer advancing)J
90 302 :M
.998 .1(to a new )J
f4_12 sf
2.012 .201(Named Stable Base)J
f3_12 sf
1.597 .16( until the current problem is solved.)J
90 336 :M
f1_14 sf
-.202(Conclusions)A
90 357 :M
f3_12 sf
.63 .063(Patterns can be used to describe aspects of the development process. This)J
90 371 :M
1.093 .109(paper shows a model for how configuration management patterns can)J
90 385 :M
.997 .1(interact with development process patterns. Even with good tool support, an)J
90 399 :M
1.306 .131(organization should have a consistent model for software configuration)J
90 413 :M
.478(management.)A
90 447 :M
f1_14 sf
-.19(Acknowledgments)A
90 468 :M
f3_12 sf
.932 .093(Software configuration management is a process that occurs at all)J
90 482 :M
1.042 .104(development organizations, with varying degrees of success.  Javier Barreiro)J
90 496 :M
1.249 .125(and Neil Harrison for providing me with other perspectives on configuration)J
90 510 :M
1.15 .115(management. Royce Buehler and Doug Alan worked with me on many of the)J
90 524 :M
1.002 .1(issues for the configuration management system at the MIT Center for Space)J
90 538 :M
.81 .081(Research, on which some of these patterns are based. David Ting first brought)J
90 552 :M
1.291 .129(SCM issues \(particularly those involving remote teams\) to my attention)J
90 566 :M
.671 .067(while I was at the Kodak Boston Technology Center.  My PLoP shepherds,)J
90 580 :M
1.073 .107(Russ Corfman and DeLoy Bitner have made many useful suggestions.)J
90 602 :M
1.041 .104(The development of the SCM system at MIT, which inspired these patterns,)J
90 616 :M
.571 .057(was supported in part by NASA/GSFC contract NAS5-30612.)J
90 650 :M
f1_14 sf
-.096(References)A
90 671 :M
f3_12 sf
1.293 .129([Coplien+95] Coplien, Jim and Schmidt, Doug editors. )J
f4_12 sf
1.453 .145(Pattern Languages of)J
90 685 :M
1.876 .188(Program Design)J
f3_12 sf
1.343 .134(. Reading, MA: Addison Wesley, 1995.)J
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(; page: 6 of 6)setjob
%%EndPageSetup
-30 -31 :T
gS 30 31 552 730 rC
90 753 :M
f0_12 sf
.052 .005(SCM Patterns)J
302 753 :M
(6)S
450 753 :M
.075 .007(July 28, 1996)J
90 82 :M
f3_12 sf
2.454 .245([Coplien95] Coplien, Jim. )J
f4_12 sf
2.669 .267(A Generative Development Process Pattern)J
90 96 :M
.346(Language)A
f3_12 sf
1.443 .144(. in [Coplien+95])J
90 118 :M
2.075 .207([Humphrey90] Humphrey, Watts. )J
f4_12 sf
1.754 .175(Managing the Software Process)J
f3_12 sf
1.893 .189(. Reading,)J
90 132 :M
1.247 .125(MA: Addison-Wesley, 1990.)J
endp
%%Trailer
end
%%EOF
